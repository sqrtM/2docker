services:
  reverse-proxy:
    image: "traefik:v2.3"
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web-securise.address=:443"
      - "--certificatesresolvers.letsencrypt-certifgratuit.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt-certifgratuit.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt-certifgratuit.acme.email=mason@example.com"
      - "--certificatesresolvers.letsencrypt-certifgratuit.acme.storage=/letsencrypt/acme.json"
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
      - target: 8080
        published: 8080
        mode: host

    deploy:
      mode: global
      placement:
        # deploy once on manager nodes, and not elsewhere
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
    volumes:
    - "./letsencrypt:/letsencrypt"
    - "/var/run/docker.sock:/var/run/docker.sock"


  whoami:
    image: "traefik/whoami"
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.whoami-service.rule=Host(`example.com`)"
        - "traefik.http.routers.whoami.rule=Host(`example.com`)"
        - "traefik.http.routers.whoami.entrypoints=web-securise"
        - "traefik.http.routers.whoami.tls.certresolver=letsencrypt-certifgratuit"
        - "traefik.http.services.whoami-service.loadbalancer.server.port=8001"
    ports:
      - "8001:80"
